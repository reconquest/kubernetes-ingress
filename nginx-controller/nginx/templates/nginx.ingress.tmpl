{{- if eq .Type "http" }}
{{range $upstream := .Upstreams}}
upstream {{$upstream.Name}} {
	{{if $upstream.LBMethod }}{{$upstream.LBMethod}};{{end}}
	{{range $server := $upstream.UpstreamServers}}
	server {{$server.Address}}:{{$server.Port}};{{end}}
	{{if $.Keepalive}}keepalive {{$.Keepalive}};{{end}}
}{{end}}

{{range $map := .Maps}}
map {{$map.Source}} {{$map.Variable}} {
{{- range $endpoint, $value := $map.Values}}
	{{$endpoint}} {{$value}};
{{- end}}
}
{{end}}

{{- $cfg := .}}

{{- range $server := .Servers}}
server {
	set "$k8s_namespace" "{{$cfg.Namespace}}";
	set "$k8s_ingress" "{{$cfg.IngressName}}";

	{{range $port := $server.Ports}}
	listen {{if $server.Address}}{{$server.Address}}:{{end}}{{$port}}{{if $server.ProxyProtocol}} proxy_protocol{{end}};
	{{- end}}
	{{if $server.SSL}}
	{{- range $port := $server.SSLPorts}}
	listen {{if $server.Address}}{{$server.Address}}:{{end}}{{$port}} ssl{{if $server.HTTP2}} http2{{end}}{{if $server.ProxyProtocol}} proxy_protocol{{end}};
	{{- end}}
	ssl_certificate {{$server.SSLCertificate}};
	ssl_certificate_key {{$server.SSLCertificateKey}};
	{{end}}
	{{range $setRealIPFrom := $server.SetRealIPFrom}}
	set_real_ip_from {{$setRealIPFrom}};{{end}}
	{{if $server.RealIPHeader}}real_ip_header {{$server.RealIPHeader}};{{end}}
	{{if $server.RealIPRecursive}}real_ip_recursive on;{{end}}

	server_tokens {{$server.ServerTokens}};

	server_name {{$server.Name}};

	{{range $proxyHideHeader := $server.ProxyHideHeaders}}
	proxy_hide_header {{$proxyHideHeader}};{{end}}
	{{range $proxyPassHeader := $server.ProxyPassHeaders}}
	proxy_pass_header {{$proxyPassHeader}};{{end}}
	{{if $server.SSL}}
	{{- if $server.SSLRedirect}}
	if ($scheme = http) {
		return 301 https://$host:{{index $server.SSLPorts 0}}$request_uri;
	}
	{{- end}}
	{{- if $server.HSTS}}
	proxy_hide_header Strict-Transport-Security;
	add_header Strict-Transport-Security "max-age={{$server.HSTSMaxAge}}; {{if $server.HSTSIncludeSubdomains}}includeSubDomains; {{end}}preload" always;{{end}}
	{{- end}}
	{{- if $server.RedirectToHTTPS}}
	if ($http_x_forwarded_proto = 'http') {
		return 301 https://$host$request_uri;
	}
	{{- end}}

	{{- if $server.ServerSnippets}}
	{{range $value := $server.ServerSnippets}}
	{{$value}}{{end}}
	{{- end}}

	{{range $location := $server.Locations}}
	location {{$location.Path}} {
		proxy_http_version 1.1;
		{{if $location.Websocket}}
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		{{- else}}
		{{- if $.Keepalive}}proxy_set_header Connection "";{{end}}
		{{- end}}

		{{- if $location.LocationSnippets}}
		{{range $value := $location.LocationSnippets}}
		{{$value}}{{end}}
		{{- end}}

		proxy_connect_timeout {{$location.ProxyConnectTimeout}};
		proxy_read_timeout {{$location.ProxyReadTimeout}};
		client_max_body_size {{$location.ClientMaxBodySize}};
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Port $server_port;
		proxy_set_header X-Forwarded-Proto {{if $server.RedirectToHTTPS}}https{{else}}$scheme{{end}};

		proxy_buffering {{if $location.ProxyBuffering}}on{{else}}off{{end}};
		{{- if $location.ProxyBuffers}}
		proxy_buffers {{$location.ProxyBuffers}};
		{{- end}}
		{{- if $location.ProxyBufferSize}}
		proxy_buffer_size {{$location.ProxyBufferSize}};
		{{- end}}
		{{- if $location.ProxyMaxTempFileSize}}
		proxy_max_temp_file_size {{$location.ProxyMaxTempFileSize}};
		{{- end}}
		{{if $location.SSL}}
		proxy_pass https://{{$location.Upstream.Name}}{{$location.Rewrite}};
		{{else}}
		proxy_pass http://{{$location.Upstream.Name}}{{$location.Rewrite}};
		{{end}}
	}{{end}}
}{{end}}
{{- else }}
upstream {{.Upstream.Name}} {
	{{if .Upstream.LBMethod }}{{.Upstream.LBMethod}};{{end}}
	{{range $server := .Upstream.UpstreamServers}}
	server {{$server.Address}}:{{$server.Port}};{{end}}
}

{{ $server := .Server }}

server {
	{{range $port := .Server.Ports}}
	listen {{if $server.Address}}{{$server.Address}}:{{end}}{{$port}};
	{{- end}}
	{{- if .Server.ServerSnippets}}
	{{range $value := .Server.ServerSnippets}}
	{{$value}}{{end}}
	{{- end}}

    {{- if .Server.ProxyBufferSize}}
    proxy_connect_timeout {{.Server.ProxyConnectTimeout}};
    {{- end }}
    {{- if .Server.ProxyBufferSize}}
    proxy_buffer_size {{.Server.ProxyBufferSize}};
    {{- end}}

    proxy_pass {{.Upstream.Name}};
}
{{ end }}
